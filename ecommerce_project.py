# -*- coding: utf-8 -*-
"""Ecommerce Project.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/18ANybwLytD032TejbNZT_hX-K7u-lFPx
"""

import pandas as pd
import plotly.express as px
import plotly.graph_objects as go
import plotly.io as pio
import plotly.colors as colors

data = pd.read_csv('Superstore.csv', encoding = 'latin-1')
# data.head()

data['Order Date'] = pd.to_datetime(data['Order Date'])
data['Ship Date'] = pd.to_datetime(data['Ship Date'])
# data.info()

data['Order Month'] = data['Order Date'].dt.month
data['Order Year'] = data['Order Date'].dt.year
data['Order day of week'] = data['Order Date'].dt.dayofweek
# data.head()

"""Monthly Sales Analysis"""

sales_by_month = data.groupby('Order Month')['Sales'].sum().reset_index()
sales_by_month

"""Visualizing Monthly Sales"""

fig = px.line(sales_by_month, x = 'Order Month', y = 'Sales', title='Monthly Sales Analysis')
fig.update_layout(width=800, height=400)
fig.show()

"""Sales by Category"""

sales_by_category = data.groupby('Category')['Sales'].sum().reset_index()
sales_by_category

"""Visualizing Category Sales"""

fig = px.pie(sales_by_category,
             values = 'Sales',
             names = 'Category', hole = 0.3,
            #  Used for soft and decent colors (Optional):
             color_discrete_sequence = px.colors.qualitative.Pastel)

fig.update_traces(textposition='inside', textinfo='percent+label')
fig.update_layout(title_text = 'Sales Analysis by Category', title_font=dict(size=24))
fig.show()

"""Sales Analysis by Sub Category"""

sales_by_subcategory = data.groupby('Sub-Category')['Sales'].sum().reset_index()
sales_by_subcategory

"""Analyzing Sales by Sub-Category"""

fig = px.bar(sales_by_subcategory, x='Sub-Category', y='Sales', title='Sales by Sub-Category')
fig.show()

"""Monthly Profit Analaysis"""

profit_by_month = data.groupby('Order Month')['Profit'].sum().reset_index()
profit_by_month

"""Analyzing Profit By Month"""

fig = px.line(profit_by_month, x='Order Month', y='Profit', title='Profit by Month')
fig.update_layout(width=800, height=400, title_font=dict(size=24))
fig.show()

"""Profit by Category"""

profit_by_category = data.groupby('Category')['Profit'].sum().reset_index()
profit_by_category

"""Analyzing Profit by Category"""

fig = px.pie(profit_by_category,
             values='Profit',
             names='Category',
             hole=0.3)

fig.update_traces(textposition='inside', textinfo='percent+label')
fig.update_layout(title_text='Profit by Category', title_font=dict(size=24))

fig.show()

"""Profit by Sub-Category"""

profit_by_subcategory = data.groupby('Sub-Category')['Profit'].sum().reset_index()
fig = px.bar(profit_by_subcategory, x='Sub-Category', y='Profit', title='Profit Analysis by Sub-Category')
fig.show( )

"""Sales and Profit - Customer Segment"""

sales_profit_by_segment = data.groupby('Segment').agg({'Sales':'sum', 'Profit': 'sum'}).reset_index()
sales_profit_by_segment

"""Analyzing Sales and Profit by Segment"""

fig = go.Figure()
fig.add_trace(go.Bar(x=sales_profit_by_segment['Segment'], y=sales_profit_by_segment['Sales'], name='Sales'))
fig.add_trace(go.Bar(x=sales_profit_by_segment['Segment'], y=sales_profit_by_segment['Profit'], name='Profit'))
fig.update_layout(title='Sales and Profit Analysis by Segment', xaxis_title='Consumer Segment', yaxis_title='Amount')
fig.show()

"""Sales to Profit Ratio"""

sales_profit_by_segment['Sales to Profit Ratio'] = sales_profit_by_segment['Sales'] / sales_profit_by_segment['Profit']
sales_profit_by_segment[['Segment', 'Sales to Profit Ratio']]

"""Analyzing Sales to Profit Ratio"""

fig = go.Figure()

fig.add_trace(go.Scatter(x=sales_profit_by_segment['Segment'], y=sales_profit_by_segment['Sales to Profit Ratio']))
fig.show()